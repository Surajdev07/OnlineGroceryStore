package com.onlinesweetshopapi;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.junit.Assert;
import org.junit.Before;
import org.junit.jupiter.api.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MockMvcBuilder;
import org.springframework.test.web.servlet.MvcResult;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.onlinesweetshopapi.domain.Category;

@RunWith(SpringRunner.class)
@SpringBootTest
public class OnlinesweetshopapiApplicationTests {

	private MockMvc mockMvc;
	
	@Autowired
	private WebApplicationContext context;
	
	ObjectMapper objectMapper = new ObjectMapper();
	
	@Before
	public void setUp()
	{
		mockMvc = MockMvcBuilders.webAppContextSetup(context).build();
	}
	
	@Test
	public void addCategory() throws Exception {
	 
		Category category = new Category();
		category.setCategoryId(101);
		category.setCategoryName("CategoryName");
		
		String JsonRequest = objectMapper.writeValueAsString(category);
		
		MvcResult result = mockMvc.perform(post("/api/Categories/add").content(JsonRequest).contentType(MediaType.APPLICATION_JSON_VALUE))
				.andExpect(status().isCreated()).andReturn();
		
		String resultContext = result.getResponse().getContentAsString();
		ResponseEntity<?> entity = objectMapper.readValue(resultContext, ResponseEntity.class);
		
		Assert.assertTrue(entity.getStatusCode()==HttpStatus.CREATED);
		
	}

	
}
